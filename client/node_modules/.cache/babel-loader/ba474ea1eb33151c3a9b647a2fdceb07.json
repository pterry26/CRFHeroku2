{"ast":null,"code":"import axios from'axios';axios.defaults.headers.common={\"Content-Type\":\"application/json\"};var baseUrl='api/activities';var getAllActivities=function getAllActivities(){var request=axios.get(baseUrl);return request.then(function(response){return response.data;});};var addActivity=function addActivity(activity){var request=axios.post(baseUrl,activity);return request.then(function(response){console.log('this got sent back from the backend',response);return response.data;});};var deleteAllActivities=function deleteAllActivities(){var request=axios.get(\"\".concat(baseUrl,\"/delete\"));return request.then(function(response){return response.data;});};export default{getAllActivities:getAllActivities,addActivity:addActivity,deleteAllActivities:deleteAllActivities};","map":{"version":3,"sources":["/Users/pterry/Desktop/crf-heroku/client/src/services/activities.js"],"names":["axios","defaults","headers","common","baseUrl","getAllActivities","request","get","then","response","data","addActivity","activity","post","console","log","deleteAllActivities"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAEAA,KAAK,CAACC,QAAN,CAAeC,OAAf,CAAuBC,MAAvB,CAAgC,CAC9B,eAAgB,kBADc,CAAhC,CAIA,GAAMC,CAAAA,OAAO,CAAG,gBAAhB,CAEA,GAAMC,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,EAAM,CAC7B,GAAMC,CAAAA,OAAO,CAAGN,KAAK,CAACO,GAAN,CAAUH,OAAV,CAAhB,CACA,MAAOE,CAAAA,OAAO,CAACE,IAAR,CAAa,SAAAC,QAAQ,QAAIA,CAAAA,QAAQ,CAACC,IAAb,EAArB,CAAP,CACD,CAHD,CAKA,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAAAC,QAAQ,CAAI,CAC9B,GAAMN,CAAAA,OAAO,CAAGN,KAAK,CAACa,IAAN,CAAWT,OAAX,CAAoBQ,QAApB,CAAhB,CAEA,MAAON,CAAAA,OAAO,CAACE,IAAR,CAAa,SAAAC,QAAQ,CAAI,CAC9BK,OAAO,CAACC,GAAR,CAAY,qCAAZ,CAAmDN,QAAnD,EACA,MAAOA,CAAAA,QAAQ,CAACC,IAAhB,CACD,CAHM,CAAP,CAID,CAPD,CASA,GAAMM,CAAAA,mBAAmB,CAAG,QAAtBA,CAAAA,mBAAsB,EAAM,CAChC,GAAMV,CAAAA,OAAO,CAAGN,KAAK,CAACO,GAAN,WAAaH,OAAb,YAAhB,CACA,MAAOE,CAAAA,OAAO,CAACE,IAAR,CAAa,SAAAC,QAAQ,QAAIA,CAAAA,QAAQ,CAACC,IAAb,EAArB,CAAP,CACD,CAHD,CAKA,cAAe,CAAEL,gBAAgB,CAAhBA,gBAAF,CAAoBM,WAAW,CAAXA,WAApB,CAAiCK,mBAAmB,CAAnBA,mBAAjC,CAAf","sourcesContent":["import axios from 'axios'\n\naxios.defaults.headers.common = {\n  \"Content-Type\": \"application/json\"\n}\n\nconst baseUrl = 'api/activities' \n\nconst getAllActivities = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst addActivity = activity => {\n  const request = axios.post(baseUrl, activity)\n  \n  return request.then(response => {\n    console.log('this got sent back from the backend', response)\n    return response.data\n  })\n}\n\nconst deleteAllActivities = () => {\n  const request = axios.get(`${baseUrl}/delete`)\n  return request.then(response => response.data)\n}\n\nexport default { getAllActivities, addActivity, deleteAllActivities }"]},"metadata":{},"sourceType":"module"}